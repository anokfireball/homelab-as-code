---
- name: create calico config directory
  file:
    path: /etc/calico
    state: directory

- name: download calico operator manifest
  get_url:
    url: |
      https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/tigera-operator.yaml
    dest: /etc/calico/tigera-operator.yaml
  register: calico_operator_manifest

- name: check if calico operator already exists
  shell: |
    set -o pipefail
    kubectl get deployments -n tigera-operator -o json | jq ".items | length"
  args:
    executable: /bin/bash
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: calico_operator_exists
  ignore_errors: true
  changed_when: calico_operator_exists.stdout == '0'

- name: apply calico operator manifest
  # CRD bundle too large to use kubectl apply
  command: |
    kubectl {{ 'create' if calico_operator_exists.stdout == '0' else 'replace' }} -f /etc/calico/tigera-operator.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  changed_when: calico_operator_exists.stdout == '0' or calico_operator_manifest.changed

- name: copy calico custom resource manifest
  template:
    src: custom-resources.yaml.j2
    dest: /etc/calico/custom-resources.yaml
  register: calico_custom_resource_manifest

- name: check  if calico custom resource already exists
  shell: |
    set -o pipefail
    kubectl get installations -o json | jq ".items | length"
  args:
    executable: /bin/bash
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: calico_custom_resource_exists
  ignore_errors: true
  changed_when: calico_custom_resource_exists.stdout == '0'

- name: apply custom calico resource manifest
  command: |
    kubectl {{ 'create' if calico_custom_resource_exists.stdout == '0' else 'replace' }} -f /etc/calico/custom-resources.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  changed_when: calico_custom_resource_exists.stdout == '0' or calico_custom_resource_manifest.changed
