apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: fresh-rss-postgresql
  namespace: default
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:17.2-27@sha256:9308dcd778be66f56bdce8503916ab820d12420e7d1bc74fff0d663c95e126c3
  instances: 1
  managed:
    services:
      disabledDefaultServices: ["ro", "r"]
    roles:
      - name: backup
        passwordSecret:
          name: postgres-backup-user
        login: true
        superuser: false
        inRoles:
          - pg_read_all_data
  bootstrap:
    initdb:
      database: freshrss
      owner: freshrss
      secret:
        name: fresh-rss-postgres-user
  storage:
    size: 2Gi
    storageClass: cluster-replicated
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: fresh-rss
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: freshrss/freshrss
              tag: 1.26.3-alpine@sha256:dc50d06a032f7113d962b859c012a926b8222e3f0b6d4ce4861f3cbd0a16f8cf
            env:
              TZ: Europe/Berlin
              BASE_URL: https://freshrss.${SERVICE_DOMAIN}
              CRON_MIN: "*/12"
              FRESHRSS_INSTALL:
                valueFrom:
                  secretKeyRef:
                    name: fresh-rss-config
                    key: freshrss-install
              FRESHRSS_USER:
                valueFrom:
                  secretKeyRef:
                    name: fresh-rss-config
                    key: freshrss-user
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 20m
                memory: 100Mi
    service:
      main:
        controller: main
        annotations:
          tailscale.com/expose: "true"
          tailscale.com/hostname: homelab-freshrss
        ports:
          http:
            port: 80
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: freshrss.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: fresh-rss-tls
            hosts:
              - freshrss.${SERVICE_DOMAIN}
    persistence:
      data:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts:
          - path: /var/www/FreshRSS/data
---
apiVersion: k8up.io/v1
kind: PreBackupPod
metadata:
  name: fresh-rss-database-backup
  namespace: default
  labels:
    backup: fresh-rss-database
  annotations:
    k8up.io/backup: "true"
spec:
  backupCommand: sh -c 'PGHOST="$POSTGRES_HOST" PGUSER="$POSTGRES_USER" PGPASSWORD="$POSTGRES_PASSWORD" pg_dumpall --clean'
  pod:
    spec:
      containers:
        - name: fresh-rss-database-backup
          image: postgres:17.4-alpine@sha256:6c717ca5788964057727e357b9bb634df43197ccbee573994b438921f97a3583
          command:
            - "sleep"
            - "infinity"
          env:
            - name: POSTGRES_HOST
              value: fresh-rss-postgresql-rw
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-backup-user
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-backup-user
                  key: password
---
apiVersion: k8up.io/v1
kind: Schedule
metadata:
  name: fresh-rss-database
  namespace: default
spec:
  backend:
    repoPasswordSecretRef:
      name: k8up-restic-secrets
      key: restic-password
    s3:
      bucket: Habitat-Giggle9-Composer/fresh-rss
  backup:
    labelSelectors:
      - matchLabels:
          backup: fresh-rss-database
    schedule: "17 4/6 * * *"
    concurrentRunsAllowed: false
  prune:
    schedule: "47 0 1 * *"
    concurrentRunsAllowed: false
    retention:
      keepHourly: 6
      keepDaily: 14
      keepWeekly: 12
      keepMonthly: 6
      keepYearly: 2
