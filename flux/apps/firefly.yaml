apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: firefly-postgresql
  namespace: default
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:17.2-27@sha256:9308dcd778be66f56bdce8503916ab820d12420e7d1bc74fff0d663c95e126c3
  instances: 1
  managed:
    services:
      disabledDefaultServices: ["ro", "r"]
    roles:
      - name: backup
        passwordSecret:
          name: postgres-backup-user
        login: true
        superuser: false
        inRoles:
          - pg_read_all_data
  bootstrap:
    initdb:
      database: firefly
      owner: firefly
      secret:
        name: firefly-postgres-user
  storage:
    size: 2Gi
    storageClass: cluster-replicated
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: firefly
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: firefly-iii
      version: 1.9.11
      sourceRef:
        kind: HelmRepository
        name: firefly-iii
        namespace: flux-system
  values:
    image:
      repository: fireflyiii/core
      tag: version-6.3.2@sha256:e69c9558f910d7652ae98ad0f6583ed2470b56620c4241b05b6b5f63bfea8020
    persistence:
      enabled: false
    config:
      existingSecret: firefly-config
    cronjob:
      enabled: true
      annotations:
        healthcheckSecret: firefly-cron
      auth:
        existingSecret: firefly-cron
      image:
        repository: ghcr.io/anokfireball/base-image
        tag: 3.22.1@sha256:3d337c787396b6e5ef6677ecf76320c4a776ab25997a83fef2de8f5291cd05d7
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
        - firefly.${SERVICE_DOMAIN}
      tls:
        - secretName: firefly-tls
          hosts:
            - firefly.${SERVICE_DOMAIN}
    resources:
      requests:
        cpu: 20m
        memory: 200Mi
---
apiVersion: k8up.io/v1
kind: PreBackupPod
metadata:
  name: firefly-database-backup
  namespace: default
  labels:
    backup: firefly-database
  annotations:
    k8up.io/backup: "true"
spec:
  backupCommand: sh -c 'PGHOST="$POSTGRES_HOST" PGUSER="$POSTGRES_USER" PGPASSWORD="$POSTGRES_PASSWORD" pg_dumpall --clean'
  pod:
    spec:
      containers:
        - name: firefly-database-backup
          image: postgres:17.4-alpine@sha256:6c717ca5788964057727e357b9bb634df43197ccbee573994b438921f97a3583
          command:
            - "sleep"
            - "infinity"
          env:
            - name: POSTGRES_HOST
              value: firefly-postgresql-rw
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-backup-user
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-backup-user
                  key: password
---
apiVersion: k8up.io/v1
kind: Schedule
metadata:
  name: firefly-database
  namespace: default
spec:
  backend:
    repoPasswordSecretRef:
      name: k8up-restic-secrets
      key: restic-password
    s3:
      bucket: Habitat-Giggle9-Composer/firefly
  backup:
    labelSelectors:
      - matchLabels:
          backup: firefly-database
    schedule: "11 4/6 * * *"
    concurrentRunsAllowed: false
  prune:
    schedule: "41 0 1 * *"
    concurrentRunsAllowed: false
    retention:
      keepHourly: 6
      keepDaily: 14
      keepWeekly: 12
      keepMonthly: 6
      keepYearly: 2
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: firefly-importer
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: importer
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: firefly-iii
        namespace: flux-system
  values:
    image:
      repository: fireflyiii/data-importer
      tag: version-1.7.10@sha256:1769f2829837df9a78a4c6b10fa1516fe9c7410d293558c459aac1ba3af2f88f
    fireflyiii:
      url: http://firefly-firefly-iii
      vanityUrl: https://firefly.${SERVICE_DOMAIN}
      auth:
        existingSecret: firefly-importer
    config:
      existingSecret: firefly-importer
      env:
        IGNORE_DUPLICATE_ERRORS: "false"
        TZ: Europe/Berlin
      files: []
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
        - firefly-importer.${SERVICE_DOMAIN}
      tls:
        - secretName: firefly-importer-tls
          hosts:
            - firefly-importer.${SERVICE_DOMAIN}
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: firefly-pico
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: cioraneanu/firefly-pico
              tag: 1.9.0@sha256:f8a1ab0ac894e261892792ab79b3a38cf9f9af25d1d4069c87d34d2aa3b77ba2
            env:
              TZ: Europe/Berlin
              APP_URL: firefly-pico.${SERVICE_DOMAIN}
              FIREFLY_URL: http://firefly-firefly-iii
              DB_CONNECTION: sqlite
              DB_DATABASE: /database/database.sqlite
    service:
      main:
        controller: main
        ports:
          http:
            port: 80
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: firefly-pico.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: firefly-pico-tls
            hosts:
              - firefly-pico.${SERVICE_DOMAIN}
    persistence:
      database:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
