apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: n8n-postgresql
  namespace: default
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:17.2-27@sha256:9308dcd778be66f56bdce8503916ab820d12420e7d1bc74fff0d663c95e126c3
  instances: 1
  managed:
    services:
      disabledDefaultServices: ["ro", "r"]
    roles:
      - name: backup
        passwordSecret:
          name: postgres-backup-user
        login: true
        superuser: false
        inRoles:
          - pg_read_all_data
  bootstrap:
    initdb:
      database: n8n
      owner: n8n
      secret:
        name: n8n-postgres-user
  storage:
    size: 5Gi
    storageClass: cluster-replicated
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: n8n
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: n8n
      version: 17.13.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  values:
    service:
      main:
        annotations:
          tailscale.com/expose: "true"
          tailscale.com/hostname: homelab-n8n
        ports:
          main:
            port: 5678
            targetPort: 5678
    persistence:
      data:
        enabled: true
        mountPath: "/data"
        storageClass: cluster-scratch
        size: 5Gi
    redis:
      enabled: false
    cnpg:
      main:
        enabled: false
    portal:
      open:
        enabled: true
    securityContext:
      container:
        readOnlyRootFilesystem: false
        runAsNonRoot: false
        runAsUser: 0
        fsGroup: 1000
    workload:
      main:
        podSpec:
          containers:
            main:
              probes:
                liveness:
                  path: "/healthz"
                readiness:
                  path: "/healthz"
                startup:
                  path: "/healthz"
              envFrom:
                - secretRef:
                    name: n8n-config
                    expandObjectName: false
              env:
                DB_TYPE: postgresdb
                DB_POSTGRESDB_HOST: n8n-postgresql-rw
                DB_POSTGRESDB_PORT: 5432
                DB_POSTGRESDB_USER:
                  secretKeyRef:
                    name: n8n-postgres-user
                    expandObjectName: false
                    key: username
                DB_POSTGRESDB_PASSWORD:
                  secretKeyRef:
                    name: n8n-postgres-user
                    expandObjectName: false
                    key: password
                DB_POSTGRESDB_DATABASE: n8n
                QUEUE_BULL_REDIS_HOST: ""
                QUEUE_BULL_REDIS_PORT: 6379
                QUEUE_BULL_REDIS_PASSWORD: ""
                GENERIC_TIMEZONE: "Europe/Berlin"
                N8N_DEFAULT_LOCALE: "de-DE"
                N8N_USER_FOLDER: /data
                N8N_EDITOR_BASE_URL: https://n8n.${SERVICE_DOMAIN}/
                WEBHOOK_URL: https://n8n.${SERVICE_DOMAIN}/
    ingress:
      main:
        enabled: true
        namespace: default
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        ingressClassName: nginx
        hosts:
          - host: n8n.${SERVICE_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: n8n-tls
            hosts:
              - n8n.${SERVICE_DOMAIN}
        integrations:
          traefik:
            enabled: false
---
apiVersion: k8up.io/v1
kind: PreBackupPod
metadata:
  name: n8n-database-backup
  namespace: default
  labels:
    backup: n8n-database
  annotations:
    k8up.io/backup: "true"
spec:
  backupCommand: sh -c 'PGHOST="$POSTGRES_HOST" PGUSER="$POSTGRES_USER" PGPASSWORD="$POSTGRES_PASSWORD" pg_dumpall --clean'
  pod:
    spec:
      containers:
        - name: n8n-database-backup
          image: postgres:17.4-alpine@sha256:6c717ca5788964057727e357b9bb634df43197ccbee573994b438921f97a3583
          command:
            - "sleep"
            - "infinity"
          env:
            - name: POSTGRES_HOST
              value: n8n-postgresql-rw
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-backup-user
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-backup-user
                  key: password
---
apiVersion: k8up.io/v1
kind: Schedule
metadata:
  name: n8n-database
  namespace: default
spec:
  backend:
    repoPasswordSecretRef:
      name: k8up-restic-secrets
      key: restic-password
    s3:
      bucket: Habitat-Giggle9-Composer/n8n
  backup:
    labelSelectors:
      - matchLabels:
          backup: n8n-database
    schedule: "53 4/6 * * *"
    concurrentRunsAllowed: false
  prune:
    schedule: "23 0 1 * *"
    concurrentRunsAllowed: false
    retention:
      keepHourly: 6
      keepDaily: 14
      keepWeekly: 12
      keepMonthly: 6
      keepYearly: 2
