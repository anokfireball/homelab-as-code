apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/hotio/prowlarr
              tag: release@sha256:0fc62cbb850542dc235581986e9f64b774f08d3dfbe29f96a5c1177819f1b8a3
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 9696
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: prowlarr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: prowlarr-tls
            hosts:
              - prowlarr.${SERVICE_DOMAIN}
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/hotio/radarr
              tag: release@sha256:7f583b35dca64c1bffd27a39d61d4c3143633a29070260f76f1e5939006780d8
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 7878
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: radarr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: radarr-tls
            hosts:
              - radarr.${SERVICE_DOMAIN}
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
      data:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/hotio/sonarr
              tag: release@sha256:6cf04af5bee3c330984c0c2b8705204ada078a43f5bd43e03ecea37f250c31c8
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 8989
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: sonarr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: sonarr-tls
            hosts:
              - sonarr.${SERVICE_DOMAIN}
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
      data:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/hotio/lidarr
              tag: release@sha256:56abc96afbb4e2cfbc1cca2666e9a71922718aa47142b7ca983a77c7c2d0b08a
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 8686
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: lidarr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: lidarr-tls
            hosts:
              - lidarr.${SERVICE_DOMAIN}
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
      data:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: flaresolverr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/flaresolverr/flaresolverr
              tag: v3.3.25@sha256:68160ec125e5cde23bc45549a443da0da0223cf4f0de7571ed2c6851cf6e1561
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 8191
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: flaresolverr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: flaresolverr-tls
            hosts:
              - flaresolverr.${SERVICE_DOMAIN}
